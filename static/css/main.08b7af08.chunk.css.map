{"version":3,"sources":["webpack://src/index.scss","webpack://src/variables.scss","webpack://src/components/Navbar/Navbar.module.scss","webpack://src/components/Logo/Logo.module.css","webpack://src/hoc/Layout/Layout.module.scss","webpack://src/mixins.scss","webpack://src/components/TodoItems/TodoItems.module.scss","webpack://src/components/TodoItems/TodoItem/TodoItem.module.scss","webpack://src/components/UI/Button/Button.module.scss","webpack://src/components/UI/Input/Input.module.scss"],"names":[],"mappings":"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","file":"main.08b7af08.chunk.css","sourcesContent":["@import './variables.scss';\n\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: inherit;\n  font-family: $font-family;\n}\n\nbody {\n  margin: 0;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  box-sizing: border-box;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n\n@font-face {\n  font-family: 'Gilroy';\n  src: url('./assets/fonts/Gilroy-Light.eot');\n  src: local('Gilroy Light'), local('Gilroy-Light'),\n  url('./assets/fonts/Gilroy-Light.eot?#iefix') format('embedded-opentype'),\n  url('./assets/fonts/Gilroy-Light.woff') format('woff'),\n  url('./assets/fonts/Gilroy-Light.ttf') format('truetype');\n  font-weight: 300;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: 'Gilroy';\n  src: url('./assets/fonts/Gilroy-Regular.eot');\n  src: local('Gilroy Regular'), local('Gilroy-Regular'),\n  url('./assets/fonts/Gilroy-Regular.eot?#iefix') format('embedded-opentype'),\n  url('./assets/fonts/Gilroy-Regular.woff') format('woff'),\n  url('./assets/fonts/Gilroy-Regular.ttf') format('truetype');\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: 'Gilroy';\n  src: url('./assets/fonts/Gilroy-Medium.eot');\n  src: local('Gilroy Medium'), local('Gilroy-Medium'),\n  url('./assets/fonts/Gilroy-Medium.eot?#iefix') format('embedded-opentype'),\n  url('./assets/fonts/Gilroy-Medium.woff') format('woff'),\n  url('./assets/fonts/Gilroy-Medium.ttf') format('truetype');\n  font-weight: 500;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: 'Gilroy';\n  src: url('./assets/fonts/Gilroy-Bold.eot');\n  src: local('Gilroy Bold'), local('Gilroy-Bold'),\n  url('./assets/fonts/Gilroy-Bold.eot?#iefix') format('embedded-opentype'),\n  url('./assets/fonts/Gilroy-Bold.woff') format('woff'),\n  url('./assets/fonts/Gilroy-Bold.ttf') format('truetype');\n  font-weight: bold;\n  font-style: normal;\n}\n","//COLORS\n$color-primary: #0B278D; //Salt Blue\n$color-primary-light: #1036C1; //Medium Blue\n$color-primary-accent: #1A47ED; //Accent Blue\n$color-light-blue: #5478FF; //Light Blue\n$color-peach: #FF7676; //Peach\n$color-black: #000000;\n$color-blue-grey: #81A2BA;\n$color-light-grey: #EEEEEE;\n$color-white: #FFFFFF;\n\n//SHADOWS\n$box-shadow-small: 0 0 10px 0 rgba($color-black, .5);\n\n//FONTS\n$font-family: 'Gilroy', sans-serif;\n$font-weight-light: 300;\n$font-weight-normal: normal;\n$font-weight-medium: 500;\n$font-weight-bold: bold;\n\n//SIZES\n$content-width: 48rem;\n","@import '../../variables';\n\n.Navbar {\n  text-align: center;\n  -webkit-box-shadow: $box-shadow-small;\n  box-shadow: $box-shadow-small;\n}\n",".Logo img {\n  height: 2.5rem;\n  margin: 0.5rem;\n}\n","@import '../../variables';\n@import '../../mixins';\n\n.Content {\n  padding: 1.25rem 0 1.25rem 0;\n  position: relative;\n  height: 100%;\n  min-height: 90vh;\n  background-image: linear-gradient(\n      to right bottom,\n      rgba($color-primary-accent, 0.5),\n      rgba($color-primary, 0.4)),\n  url(../../assets/images/background.png);\n  background-size: cover;\n  background-position: top;\n\n  @include respond(phone) {\n    background-position: top;\n    background-size: auto;\n  }\n}\n","//MEDIA QUERY MANAGER\n/*\n0-600px: Phone\n600 - 900px:    Tablet portrait;\n900 - 1200px:   Tablet landscape;\n1200 - 1800px:  Our basic styles;\n1800px + :      Big Desktop;\n\n//Breakpoint argument choices\n- phone\n- tab-port\n- tab-land\n- big-desktop\n\n1em = 16px\n*/\n\n@mixin respond($breakpoint) {\n  @if $breakpoint == phone {\n    @media (max-width: 37.5em) { @content };    //600px\n  }\n  @if $breakpoint == tab-port {\n    @media (max-width: 56.25em) { @content };   //900px\n  }\n  @if $breakpoint == tab-land {\n    @media (max-width: 75em) { @content };      //1200px\n  }\n  @if $breakpoint == big-desktop {\n    @media (min-width: 112.5em) { @content };   //1800px\n  }\n}\n","@import '../../variables';\n@import '../../mixins';\n\n.TodoList {\n  max-width: $content-width;\n  margin: 0 auto;\n  text-align: center;\n  font-weight: $font-weight-light;\n  color: $color-white;\n\n  h1 {\n    color: $color-white;\n    font-size: 3rem;\n    margin-bottom: 1.25rem;\n  }\n\n  form {\n    margin-bottom: 2.5rem;\n  }\n}\n\n.Container {\n  position: relative;\n  text-align: left;\n  padding: 2.5rem;\n  background-image: linear-gradient(\n          to right bottom,\n          rgba($color-primary-accent, .95),\n          rgba($color-primary, .95));\n\n  @include respond(phone) {\n    padding: 1rem;\n    margin: 1rem;\n  }\n}\n\n.Empty {\n  text-align: center;\n  padding: 2.5rem;\n  margin-top: 1.25rem;\n  background-color: rgba($color-black, 0.1);\n}\n","@import '../../../variables';\n\n.TodoItem {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: rgba($color-black,.1);\n  padding: 0.625rem;\n  margin-bottom: 0.625rem;\n\n  &:hover {\n    background-color: rgba($color-black,.2);\n\n    button {\n      background-color: $color-peach;\n      color: $color-white;\n      opacity: 1;\n\n      &:hover {\n        background-color: darken($color-peach, 3%);\n        opacity: 1;\n      }\n    }\n  }\n\n  button {\n    &:active,\n    &:focus {\n      background-color: $color-peach;\n      color: $color-white;\n      opacity: 1;\n    }\n  }\n}\n\n.CheckedItem {\n  background-color: rgba($color-black,.05);\n  color: rgba($color-white,.5);\n\n  label {\n    text-decoration: line-through;\n  }\n\n  &:hover {\n    background-color: rgba($color-black,.1);\n    color: rgba($color-white,.4);\n  }\n}\n\n.Container {\n  padding-left: 2rem;\n  font-size: 1.25rem;\n  position: relative;\n  cursor: pointer;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  box-sizing: border-box;\n\n  .Checkmark:after {\n    left: 5px;\n    top: 2px;\n    width: 6px;\n    height: 0.625rem;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n  }\n\n  input {\n    height: 0;\n    width: 0;\n    opacity: 0;\n    position: absolute;\n    cursor: pointer;\n  }\n}\n\n.Checkmark {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 1.25rem;\n  width: 1.25rem;\n  background-color: $color-white;\n  border: 2px solid transparent;\n  box-sizing: border-box;\n\n  &:after {\n    content: '';\n    position: absolute;\n    display: none;\n  }\n}\n\n.Container:hover input ~ .Checkmark {\n  background-color: $color-light-grey;\n}\n\n.Container input:checked ~ .Checkmark {\n  background-color: $color-light-blue;\n}\n\n.Container input:focus ~ .Checkmark {\n  border: 2px solid rgba($color-black,.4);\n}\n\n.Container input:checked ~ .Checkmark:after {\n  display: block;\n}\n","@import '../../../variables';\n@import '../../../mixins';\n\n.Button {\n  padding: 0.625rem;\n  font-size: 1rem;\n  font-weight: $font-weight-normal;\n  text-transform: uppercase;\n  text-decoration: none;\n  border: none;\n  color: $color-white;\n  box-sizing: border-box;\n  background-color: transparent;\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgba($color-black,.1);\n  }\n\n  &:focus,\n  &:active {\n    outline: none;\n    background-color: $color-primary;\n  }\n}\n\n.Add {\n  background-color: $color-primary;\n  height: 3.125rem;\n  width: 20%;\n  border-bottom: 3px solid transparent;\n\n  &:hover {\n    background-color: darken($color-primary, 5%);\n  }\n\n  &:disabled {\n    opacity: .5;\n    background-color: darken($color-primary, 5%);\n    cursor: not-allowed;\n  }\n}\n\n.Delete {\n  background-color: transparent;\n  color: transparent;\n\n  @include respond(phone) {\n    background-color: $color-peach;\n    color: $color-white;\n  }\n}\n","@import '../../../variables';\n\n.Input {\n  height: 3.125rem;\n  width: 80%;\n  padding: 0.625rem;\n  font-size: 1rem;\n  text-decoration: none;\n  box-sizing: border-box;\n  border: none;\n  border-bottom: 3px solid transparent;\n\n  &:focus {\n    outline: none;\n    border-bottom: 3px solid $color-primary;\n  }\n\n  &::placeholder {\n    color: $color-blue-grey;\n    font-weight: $font-weight-normal;\n  }\n}\n\n.Invalid {\n  border-bottom: 3px solid $color-peach;\n\n  &:focus {\n    border-bottom: 3px solid $color-peach;\n  }\n}\n\n.ValidationError {\n  color: $color-peach;\n  height: 0;\n  font-size: 1rem;\n  font-weight: $font-weight-medium;\n  position: relative;\n  top: 3.125rem;\n}\n"]}