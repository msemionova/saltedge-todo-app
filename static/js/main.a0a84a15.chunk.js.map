{"version":3,"sources":["components/TodoItems/TodoItem/TodoItem.module.scss","components/UI/Input/Input.module.scss","components/TodoItems/TodoItems.module.scss","components/UI/Button/Button.module.scss","components/Navbar/Navbar.module.scss","components/Logo/Logo.module.css","hoc/Layout/Layout.module.scss","assets/images/logo.svg","components/Logo/Logo.js","components/Navbar/Navbar.js","hoc/Layout/Layout.js","components/UI/Button/Button.js","components/TodoItems/TodoItem/TodoItem.js","components/UI/Input/Input.js","containers/TodoFrom.js","components/TodoItems/TodoItems.js","containers/TodoController.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","logo","className","classes","Logo","src","saltedgeLogo","alt","navbar","Navbar","layout","props","Content","children","button","Button","btnType","join","onClick","clicked","disabled","todoItem","checkedClass","todo","checked","TodoItem","changed","Container","title","type","onKeyPress","onChange","Checkmark","deleted","input","validationError","ValidationError","inputClasses","Input","invalid","touched","push","Invalid","errorMessage","value","placeholder","ERROR_MESSAGES","TodoForm","initialState","validation","valid","minLength","maxLength","required","useState","inputState","setInputState","inputChangedHandler","event","rules","updatedState","target","isValid","trim","length","checkValidity","todoAddedHandler","added","onSubmit","todoItems","todos","Empty","map","id","TodoList","TodoController","currentState","JSON","parse","localStorage","getItem","state","setState","updateLocalStorage","setItem","stringify","TodoItems","stopPropagation","filter","console","log","key","changedTodo","find","preventDefault","Date","now","App","Layout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0a84a15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoItem\":\"TodoItem_TodoItem__ebOSd\",\"CheckedItem\":\"TodoItem_CheckedItem__2_C5j\",\"Container\":\"TodoItem_Container__2gGyV\",\"Checkmark\":\"TodoItem_Checkmark__2ZfYo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__SNRl4\",\"Invalid\":\"Input_Invalid__3aeyU\",\"ValidationError\":\"Input_ValidationError__2fHal\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoList\":\"TodoItems_TodoList__2SulA\",\"Container\":\"TodoItems_Container__3sNou\",\"Empty\":\"TodoItems_Empty__KbaAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"Add\":\"Button_Add__oKF-q\",\"Delete\":\"Button_Delete__160M_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__2q9tz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3OgXS\"};","export default __webpack_public_path__ + \"static/media/logo.6ae23580.svg\";","import React from 'react';\nimport saltedgeLogo from '../../assets/images/logo.svg';\nimport classes from './Logo.module.css';\n\nconst logo = () => (\n  <div className={classes.Logo}>\n    <img src={saltedgeLogo} alt='SaltEdge Logo'/>\n  </div>\n);\n\nexport default logo;\n","import React from 'react';\nimport classes from './Navbar.module.scss';\nimport Logo from '../Logo/Logo';\n\nconst navbar = () => (\n  <nav className={classes.Navbar}>\n    <Logo />\n  </nav>\n);\n\nexport default navbar;\n","import React from 'react';\nimport Navbar from '../../components/Navbar/Navbar';\nimport classes from './Layout.module.scss';\n\nconst layout = (props) => {\n  return <>\n    <Navbar />\n    <main className={classes.Content}>\n      {props.children}\n    </main>\n  </>\n}\n\nexport default layout;\n","import React from 'react';\nimport classes from './Button.module.scss';\n\nconst button = (props) => (\n  <button\n    className={[classes.Button, classes[props.btnType]].join(' ')}\n    onClick={props.clicked}\n    disabled={props.disabled}\n  >{props.children}</button>\n);\n\nexport default button;\n","import React from \"react\";\nimport classes from './TodoItem.module.scss';\nimport Button from '../../UI/Button/Button';\n\nconst todoItem = props => {\n  const checkedClass = props.todo.checked ? 'CheckedItem' : '';\n  return <>\n    <div className={[classes.TodoItem, classes[checkedClass]].join(' ')} onClick={props.changed}>\n      <label className={classes.Container}>{props.todo.title}\n        <input type='checkbox' onKeyPress={props.changed} onChange={props.changed} checked={props.todo.checked}/>\n        <span className={classes.Checkmark}/>\n      </label>\n      <Button btnType='Delete' clicked={props.deleted}>X</Button>\n    </div>\n  </>;\n};\n\nexport default todoItem;\n","import React from 'react';\nimport classes from './Input.module.scss';\n\nconst input = props => {\n  let validationError = <p className={classes.ValidationError}></p>;\n  const inputClasses = [classes.Input];\n\n  if (props.invalid && props.touched) {\n    inputClasses.push(classes.Invalid);\n    validationError = <p className={classes.ValidationError}>{props.errorMessage}</p>\n  }\n\n  return <>\n    {validationError}\n    <input\n      type='text'\n      className={inputClasses.join(' ')}\n      value={props.value}\n      placeholder='Add a TODO...'\n      onChange={props.changed}\n    />\n  </>\n};\n\nexport default input;\n","import React, { useState } from 'react';\nimport Input from '../components/UI/Input/Input';\nimport Button from '../components/UI/Button/Button';\n\nconst ERROR_MESSAGES = {\n  REQUIRED: 'This field is required',\n  MIN_LENGTH: 'Min length: 5 characters',\n  MAX_LENGTH: 'Max length: 100 characters'\n}\n\nconst TodoForm = props => {\n  const initialState = {\n    value: '',\n    validation: {\n      valid: false,\n      touched: false,\n      minLength: 5,\n      maxLength: 100,\n      required: true,\n      errorMessage: ''\n    }\n  };\n\n  const [inputState, setInputState] = useState(initialState);\n\n  const generateErrorMessage = (value, rules) => {\n    if (value.trim() === '') {\n      return ERROR_MESSAGES.REQUIRED;\n    } else if (value.length <= rules.minLength) {\n      return ERROR_MESSAGES.MIN_LENGTH;\n    } else if (value.length >= rules.maxLength) {\n      return ERROR_MESSAGES.MAX_LENGTH;\n    } else {\n      return '';\n    }\n  }\n\n  const checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    return isValid;\n  }\n\n  const inputChangedHandler = event => {\n    const updatedState = {\n      value: event.target.value,\n      validation: {...inputState.validation}\n    }\n    updatedState.validation.touched = true;\n    updatedState.validation.valid = checkValidity(updatedState.value, updatedState.validation);\n    updatedState.validation.errorMessage = generateErrorMessage(updatedState.value, updatedState.validation);\n    setInputState(updatedState);\n  }\n\n  const todoAddedHandler = (event, value) => {\n    props.added(event, value);\n    setInputState(initialState);\n  }\n\n  return (\n    <form onSubmit={(event) => todoAddedHandler(event, inputState.value)}>\n      <Input\n        value={inputState.value}\n        changed={(event) => inputChangedHandler(event)}\n        invalid={!inputState.validation.valid}\n        touched={inputState.validation.touched}\n        errorMessage={inputState.validation.errorMessage}\n      />\n      <Button\n        disabled={!inputState.validation.valid}\n        clicked={(event) => todoAddedHandler(event, inputState.value)}\n        btnType='Add'>ADD</Button>\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React from 'react';\nimport classes from './TodoItems.module.scss';\nimport TodoItem from './TodoItem/TodoItem';\nimport TodoForm from '../../containers/TodoFrom';\n\nconst todoItems = props => {\n  let todos = <div className={classes.Empty}>\n    Todo list is empty...\n    Add something.\n  </div>\n\n  if (props.todos.length) {\n    todos = props.todos.map(todo => (\n      <TodoItem\n        id={todo.id}\n        key={todo.id}\n        todo={todo}\n        changed={(event)=>props.changed(event, todo.id)}\n        deleted={(event)=>props.deleted(event, todo.id)}\n      />));\n  }\n\n  return (\n    <div className={classes.TodoList}>\n      <h1>TODOs:</h1>\n      <div className={classes.Container}>\n        <TodoForm added={props.added}/>\n        {todos}\n      </div>\n    </div>\n  )\n}\n\nexport default todoItems;\n","import React, { useState } from 'react';\nimport TodoItems from '../components/TodoItems/TodoItems';\n\nconst TodoController = () => {\n  const initialState = {\n    todos: []\n  };\n  const currentState = JSON.parse(localStorage.getItem('state'));\n  const [state, setState] = useState(currentState || initialState);\n\n  const updateLocalStorage = (state) => {\n    localStorage.setItem('state', JSON.stringify(state));\n  };\n\n  const addTodoHandler = (event, value) => {\n    event.preventDefault();\n    const updatedState = {todos: [...state.todos]};\n    updatedState.todos.push({\n      id: Date.now(),\n      title: value,\n      checked: false\n    })\n    setState(updatedState);\n    updateLocalStorage(updatedState);\n  };\n\n  const changeTodoHandler = (event, id) => {\n    console.log(event.type);\n    if (event.type === 'change' || event.type === 'click' || event.key === \"Enter\") {\n      const updatedState = {todos: [...state.todos]};\n      const changedTodo = updatedState.todos.find(todo => todo.id === id);\n      changedTodo.checked = !changedTodo.checked;\n      setState(updatedState);\n      updateLocalStorage(updatedState);\n    }\n  };\n\n  const deleteTodoHandler = (event, id) => {\n    event.stopPropagation();\n    const updatedState = {todos: [...state.todos]};\n    updatedState.todos = updatedState.todos.filter(todo => todo.id !== id);\n    setState(updatedState);\n    updateLocalStorage(updatedState);\n  };\n\n  return <TodoItems\n    todos={state.todos}\n    deleted={deleteTodoHandler}\n    changed={changeTodoHandler}\n    added={addTodoHandler}\n  />;\n};\n\nexport default TodoController;\n","import Layout from './hoc/Layout/Layout';\nimport TodoController from './containers/TodoController';\n\nfunction App() {\n  return <>\n    <Layout>\n      <TodoController />\n    </Layout>\n  </>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}