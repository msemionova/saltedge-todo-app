{"version":3,"sources":["components/TodoItems/TodoItem/TodoItem.module.scss","components/UI/Input/Input.module.scss","components/TodoItems/TodoItems.module.scss","components/UI/Button/Button.module.scss","components/Navbar/Navbar.module.scss","components/Logo/Logo.module.css","hoc/Layout/Layout.module.scss","assets/images/logo.svg","components/Logo/Logo.js","components/Navbar/Navbar.js","hoc/Layout/Layout.js","components/UI/Button/Button.js","components/TodoItems/TodoItem/TodoItem.js","components/UI/Input/Input.js","containers/TodoForm/TodoForm.js","components/TodoItems/TodoItems.js","containers/TodoController/TodoController.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","logo","className","classes","Logo","data-testid","src","saltedgeLogo","alt","navbar","Navbar","layout","props","Content","children","button","Button","btnType","join","onClick","clicked","disabled","testId","todoItem","checkedClass","todo","checked","combinedClasses","TodoItem","FadeIn","changed","Container","title","type","onKeyPress","onChange","index","Checkmark","deleted","xlinkHref","input","visibleClass","invalidClass","errorMessage","localStorage","getItem","invalid","touched","setItem","validationError","ValidationError","Input","value","placeholder","INPUT_CONFIG","ERROR_MESSAGES","REQUIRED","MIN_LENGTH","MAX_LENGTH","TEST_IDS","TodoForm","initialState","config","validation","minLength","maxLength","valid","required","useState","inputState","setInputState","inputChangedHandler","event","rules","updatedState","target","isValid","trim","length","checkValidity","todoAddedHandler","added","onSubmit","todoItems","todos","Empty","map","id","TodoList","TodoController","currentState","JSON","parse","state","setState","updateLocalStorage","stringify","TodoItems","stopPropagation","filter","key","changedTodo","find","preventDefault","push","Date","now","App","Layout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecfd58b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoItem\":\"TodoItem_TodoItem__ebOSd\",\"CheckedItem\":\"TodoItem_CheckedItem__2_C5j\",\"Container\":\"TodoItem_Container__2gGyV\",\"Checkmark\":\"TodoItem_Checkmark__2ZfYo\",\"FadeIn\":\"TodoItem_FadeIn__2ZfIt\",\"fadeInOpacity\":\"TodoItem_fadeInOpacity__2aUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__SNRl4\",\"Invalid\":\"Input_Invalid__3aeyU\",\"ValidationError\":\"Input_ValidationError__2fHal\",\"Visible\":\"Input_Visible__3BiXh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoList\":\"TodoItems_TodoList__2SulA\",\"Container\":\"TodoItems_Container__3sNou\",\"Empty\":\"TodoItems_Empty__KbaAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"Add\":\"Button_Add__oKF-q\",\"Delete\":\"Button_Delete__160M_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__2q9tz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3OgXS\"};","export default __webpack_public_path__ + \"static/media/logo.6ae23580.svg\";","import React from 'react';\nimport saltedgeLogo from '../../assets/images/logo.svg';\nimport classes from './Logo.module.css';\n\nconst logo = () => (\n  <div className={classes.Logo} data-testid='saltedge-logo'>\n    <img src={saltedgeLogo} alt='SaltEdge Logo'/>\n  </div>\n);\n\nexport default logo;\n","import React from 'react';\nimport classes from './Navbar.module.scss';\nimport Logo from '../Logo/Logo';\n\nconst navbar = () => (\n  <nav className={classes.Navbar} data-testid='navbar'>\n    <Logo />\n  </nav>\n);\n\nexport default navbar;\n","import React from 'react';\nimport Navbar from '../../components/Navbar/Navbar';\nimport classes from './Layout.module.scss';\n\nconst layout = (props) => {\n  return <>\n    <Navbar />\n    <main className={classes.Content} data-testid='layout'>\n      {props.children}\n    </main>\n  </>\n}\n\nexport default layout;\n","import React from 'react';\nimport classes from './Button.module.scss';\n\nconst button = (props) => (\n  <button\n    className={[classes.Button, classes[props.btnType]].join(' ')}\n    onClick={props.clicked}\n    disabled={props.disabled}\n    data-testid={props.testId}\n  >{props.children}</button>\n);\n\nexport default button;\n","import React from \"react\";\nimport classes from './TodoItem.module.scss';\nimport Button from '../../UI/Button/Button';\n\nconst todoItem = props => {\n  const checkedClass = props.todo.checked ? 'CheckedItem' : '';\n  const combinedClasses = [classes.TodoItem, classes.FadeIn, classes[checkedClass]];\n\n  return <>\n    <div className={combinedClasses.join(' ')} onClick={props.changed}>\n      <label className={classes.Container}>{props.todo.title}\n        <input\n          type='checkbox'\n          onKeyPress={props.changed}\n          onChange={props.changed}\n          checked={props.todo.checked}\n          data-testid={'checkbox-' + props.index}\n        />\n        <span className={classes.Checkmark}/>\n      </label>\n      <Button btnType='Delete' clicked={props.deleted} testId={'delete-btn-' + props.index}>\n        <svg>\n          <use xlinkHref='symbol-defs.svg#icon-trash' />\n        </svg>\n      </Button>\n    </div>\n  </>;\n};\n\nexport default todoItem;\n","import React from 'react';\nimport classes from './Input.module.scss';\n\nconst input = props => {\n  let visibleClass = '';\n  let invalidClass = '';\n  let errorMessage = props.errorMessage || localStorage.getItem('lastErrorMessage');\n\n  if (props.invalid && props.touched) {\n    localStorage.setItem('lastErrorMessage', props.errorMessage);\n    visibleClass = 'Visible';\n    invalidClass = 'Invalid';\n  }\n\n  let validationError = <p\n    data-testid='error-message'\n    className={[classes.ValidationError, classes[visibleClass]].join(' ')}>{errorMessage}\n  </p>\n\n  return <>\n    {validationError}\n    <input\n      data-testid={props.testId}\n      type={props.type}\n      className={[classes.Input, classes[invalidClass]].join(' ')}\n      value={props.value}\n      placeholder={props.placeholder}\n      onChange={props.changed}\n    />\n  </>\n};\n\nexport default input;\n","import React, { useState } from 'react';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\n\nexport const INPUT_CONFIG = {\n  DEFAULT_VALUE: '',\n  PLACEHOLDER: 'Add a TODO...',\n  TYPE: 'text',\n  MIN_LENGTH: 5,\n  MAX_LENGTH: 100\n};\n\nexport const ERROR_MESSAGES = {\n  REQUIRED: 'This field is required',\n  MIN_LENGTH: `Min length: ${INPUT_CONFIG.MIN_LENGTH} characters`,\n  MAX_LENGTH: `Max length: ${INPUT_CONFIG.MAX_LENGTH} characters`\n};\n\nconst TEST_IDS = {\n  INPUT: 'todo-input',\n  BUTTON: 'add-todo-btn',\n  FORM: 'todo-form'\n};\n\nconst ICON_PLUS = 'symbol-defs.svg#icon-plus-square';\nconst BTN_ADD = 'Add';\n\nconst TodoForm = props => {\n  const initialState = {\n    value: INPUT_CONFIG.DEFAULT_VALUE,\n    config: {\n      placeholder: INPUT_CONFIG.PLACEHOLDER,\n      type: INPUT_CONFIG.TYPE,\n    },\n    validation: {\n      minLength: INPUT_CONFIG.MIN_LENGTH,\n      maxLength: INPUT_CONFIG.MAX_LENGTH,\n      valid: false,\n      touched: false,\n      required: true,\n      errorMessage: ''\n    }\n  };\n\n  const [inputState, setInputState] = useState(initialState);\n\n  const generateErrorMessage = (value, rules) => {\n    if (value.trim() === '') {\n      return ERROR_MESSAGES.REQUIRED;\n    } else if (value.length <= rules.minLength) {\n      return ERROR_MESSAGES.MIN_LENGTH;\n    } else if (value.length >= rules.maxLength) {\n      return ERROR_MESSAGES.MAX_LENGTH;\n    } else {\n      return '';\n    }\n  }\n\n  const checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    return isValid;\n  }\n\n  const inputChangedHandler = event => {\n    const updatedState = {\n      value: event.target.value,\n      config: {...inputState.config},\n      validation: {...inputState.validation}\n    }\n    updatedState.validation.touched = true;\n    updatedState.validation.valid = checkValidity(updatedState.value, updatedState.validation);\n    updatedState.validation.errorMessage = generateErrorMessage(updatedState.value, updatedState.validation);\n    setInputState(updatedState);\n  }\n\n  const todoAddedHandler = (event, value) => {\n    props.added(event, value);\n    setInputState(initialState);\n  }\n\n  return (\n    <form onSubmit={(event) => todoAddedHandler(event, inputState.value)}\n          data-testid={TEST_IDS.FORM}>\n      <Input\n        value={inputState.value}\n        placeholder={inputState.config.placeholder}\n        type={inputState.config.type}\n        changed={(event) => inputChangedHandler(event)}\n        invalid={!inputState.validation.valid}\n        touched={inputState.validation.touched}\n        errorMessage={inputState.validation.errorMessage}\n        testId={TEST_IDS.INPUT}\n      />\n      <Button\n        disabled={!inputState.validation.valid}\n        clicked={(event) => todoAddedHandler(event, inputState.value)}\n        btnType={BTN_ADD}\n        testId={TEST_IDS.BUTTON}\n      >\n        <svg>\n          <use xlinkHref={ICON_PLUS} />\n        </svg>\n        ADD\n      </Button>\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React from 'react';\nimport classes from './TodoItems.module.scss';\nimport TodoItem from './TodoItem/TodoItem';\nimport TodoForm from '../../containers/TodoForm/TodoForm';\n\nconst todoItems = props => {\n  let todos = <div className={classes.Empty} data-testid='todo-list-empty'>\n    The list is empty... Add something.\n  </div>\n\n  if (props.todos.length) {\n    todos = props.todos.map((todo, index) => (\n      <TodoItem\n        id={todo.id}\n        key={todo.id}\n        todo={todo}\n        index={index}\n        changed={(event)=>props.changed(event, todo.id)}\n        deleted={(event)=>props.deleted(event, todo.id)}\n      />));\n    todos = <div data-testid='todo-list'>{todos}</div>\n  }\n\n  return (\n    <div className={classes.TodoList}>\n      <h1 data-testid='heading'>TODOs:</h1>\n      <div className={classes.Container} data-testid='container'>\n        <TodoForm added={props.added}/>\n        {todos}\n      </div>\n    </div>\n  )\n}\n\nexport default todoItems;\n","import React, { useState } from 'react';\nimport TodoItems from '../../components/TodoItems/TodoItems';\n\nconst TodoController = () => {\n  const initialState = {\n    todos: []\n  };\n  const currentState = JSON.parse(localStorage.getItem('state'));\n  const [state, setState] = useState(currentState || initialState);\n\n  const updateLocalStorage = (state) => {\n    localStorage.setItem('state', JSON.stringify(state));\n  };\n\n  const addTodoHandler = (event, value) => {\n    event.preventDefault();\n    const updatedState = {todos: [...state.todos]};\n    updatedState.todos.push({\n      id: Date.now(),\n      title: value,\n      checked: false\n    })\n    setState(updatedState);\n    updateLocalStorage(updatedState);\n  };\n\n  const changeTodoHandler = (event, id) => {\n    if (event.type === 'change' || event.type === 'click' || event.key === \"Enter\") {\n      const updatedState = {todos: [...state.todos]};\n      const changedTodo = updatedState.todos.find(todo => todo.id === id);\n      changedTodo.checked = !changedTodo.checked;\n      setState(updatedState);\n      updateLocalStorage(updatedState);\n    }\n  };\n\n  const deleteTodoHandler = (event, id) => {\n    event.stopPropagation();\n    const updatedState = {todos: [...state.todos]};\n    updatedState.todos = updatedState.todos.filter(todo => todo.id !== id);\n    setState(updatedState);\n    updateLocalStorage(updatedState);\n  };\n\n  return <TodoItems\n    todos={state.todos}\n    deleted={deleteTodoHandler}\n    changed={changeTodoHandler}\n    added={addTodoHandler}\n  />;\n};\n\nexport default TodoController;\n","import Layout from './hoc/Layout/Layout';\nimport TodoController from './containers/TodoController/TodoController';\n\nfunction App() {\n  return <>\n    <Layout>\n      <TodoController />\n    </Layout>\n  </>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}