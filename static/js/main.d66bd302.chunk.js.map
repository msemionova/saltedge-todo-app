{"version":3,"sources":["components/TodoItems/TodoItem/TodoItem.module.scss","components/UI/Input/Input.module.scss","components/TodoItems/TodoItems.module.scss","components/UI/Button/Button.module.scss","components/Navbar/Navbar.module.scss","components/Logo/Logo.module.css","hoc/Layout/Layout.module.scss","assets/images/logo.svg","components/Logo/Logo.js","components/Navbar/Navbar.js","hoc/Layout/Layout.js","components/UI/Button/Button.js","components/TodoItems/TodoItem/TodoItem.js","components/UI/Input/Input.js","containers/TodoFrom.js","components/TodoItems/TodoItems.js","containers/TodoController.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","logo","className","classes","Logo","src","saltedgeLogo","alt","navbar","Navbar","layout","props","Content","children","button","Button","btnType","join","onClick","clicked","disabled","todoItem","checkedClass","todo","checked","combinedClasses","TodoItem","FadeIn","changed","Container","title","type","onKeyPress","onChange","Checkmark","deleted","xlinkHref","input","errorMessage","localStorage","getItem","inputClasses","Input","errorMessageClasses","ValidationError","validationError","invalid","touched","setItem","push","Invalid","Visible","value","placeholder","ERROR_MESSAGES","TodoForm","initialState","validation","valid","minLength","maxLength","required","useState","inputState","setInputState","inputChangedHandler","event","rules","updatedState","target","isValid","trim","length","checkValidity","todoAddedHandler","added","onSubmit","todoItems","todos","Empty","map","id","TodoList","TodoController","currentState","JSON","parse","state","setState","updateLocalStorage","stringify","TodoItems","stopPropagation","filter","key","changedTodo","find","preventDefault","Date","now","App","Layout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d66bd302.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoItem\":\"TodoItem_TodoItem__ebOSd\",\"CheckedItem\":\"TodoItem_CheckedItem__2_C5j\",\"Container\":\"TodoItem_Container__2gGyV\",\"Checkmark\":\"TodoItem_Checkmark__2ZfYo\",\"FadeIn\":\"TodoItem_FadeIn__2ZfIt\",\"fadeInOpacity\":\"TodoItem_fadeInOpacity__2aUmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__SNRl4\",\"Invalid\":\"Input_Invalid__3aeyU\",\"ValidationError\":\"Input_ValidationError__2fHal\",\"Visible\":\"Input_Visible__3BiXh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoList\":\"TodoItems_TodoList__2SulA\",\"Container\":\"TodoItems_Container__3sNou\",\"Empty\":\"TodoItems_Empty__KbaAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"Add\":\"Button_Add__oKF-q\",\"Delete\":\"Button_Delete__160M_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__2q9tz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3OgXS\"};","export default __webpack_public_path__ + \"static/media/logo.6ae23580.svg\";","import React from 'react';\nimport saltedgeLogo from '../../assets/images/logo.svg';\nimport classes from './Logo.module.css';\n\nconst logo = () => (\n  <div className={classes.Logo}>\n    <img src={saltedgeLogo} alt='SaltEdge Logo'/>\n  </div>\n);\n\nexport default logo;\n","import React from 'react';\nimport classes from './Navbar.module.scss';\nimport Logo from '../Logo/Logo';\n\nconst navbar = () => (\n  <nav className={classes.Navbar}>\n    <Logo />\n  </nav>\n);\n\nexport default navbar;\n","import React from 'react';\nimport Navbar from '../../components/Navbar/Navbar';\nimport classes from './Layout.module.scss';\n\nconst layout = (props) => {\n  return <>\n    <Navbar />\n    <main className={classes.Content}>\n      {props.children}\n    </main>\n  </>\n}\n\nexport default layout;\n","import React from 'react';\nimport classes from './Button.module.scss';\n\nconst button = (props) => (\n  <button\n    className={[classes.Button, classes[props.btnType]].join(' ')}\n    onClick={props.clicked}\n    disabled={props.disabled}\n  >{props.children}</button>\n);\n\nexport default button;\n","import React from \"react\";\nimport classes from './TodoItem.module.scss';\nimport Button from '../../UI/Button/Button';\n\nconst todoItem = props => {\n  const checkedClass = props.todo.checked ? 'CheckedItem' : '';\n  const combinedClasses = [classes.TodoItem, classes.FadeIn, classes[checkedClass]];\n\n  return <>\n    <div className={combinedClasses.join(' ')} onClick={props.changed}>\n      <label className={classes.Container}>{props.todo.title}\n        <input type='checkbox' onKeyPress={props.changed} onChange={props.changed} checked={props.todo.checked}/>\n        <span className={classes.Checkmark}/>\n      </label>\n      <Button btnType='Delete' clicked={props.deleted}>\n        <svg>\n          <use xlinkHref=\"./symbol-defs.svg#icon-trash\" />\n        </svg>\n      </Button>\n    </div>\n  </>;\n};\n\nexport default todoItem;\n","import React from 'react';\nimport classes from './Input.module.scss';\n\nconst input = props => {\n  let errorMessage = localStorage.getItem('lastErrorMessage') || props.errorMessage;\n  const inputClasses = [classes.Input];\n  const errorMessageClasses = [classes.ValidationError];\n  let validationError = <p className={errorMessageClasses.join(' ')}>{errorMessage}</p>\n\n  if (props.invalid && props.touched) {\n    localStorage.setItem('lastErrorMessage', props.errorMessage);\n    inputClasses.push(classes.Invalid);\n    errorMessageClasses.push(classes.Visible);\n    validationError = <p className={errorMessageClasses.join(' ')}>{errorMessage}</p>\n  }\n\n  return <>\n    {validationError}\n    <input\n      type='text'\n      className={inputClasses.join(' ')}\n      value={props.value}\n      placeholder='Add a TODO...'\n      onChange={props.changed}\n    />\n  </>\n};\n\nexport default input;\n","import React, { useState } from 'react';\nimport Input from '../components/UI/Input/Input';\nimport Button from '../components/UI/Button/Button';\n\nconst ERROR_MESSAGES = {\n  REQUIRED: 'This field is required',\n  MIN_LENGTH: 'Min length: 5 characters',\n  MAX_LENGTH: 'Max length: 100 characters'\n}\n\nconst TodoForm = props => {\n  const initialState = {\n    value: '',\n    validation: {\n      valid: false,\n      touched: false,\n      minLength: 5,\n      maxLength: 100,\n      required: true,\n      errorMessage: ''\n    }\n  };\n\n  const [inputState, setInputState] = useState(initialState);\n\n  const generateErrorMessage = (value, rules) => {\n    if (value.trim() === '') {\n      return ERROR_MESSAGES.REQUIRED;\n    } else if (value.length <= rules.minLength) {\n      return ERROR_MESSAGES.MIN_LENGTH;\n    } else if (value.length >= rules.maxLength) {\n      return ERROR_MESSAGES.MAX_LENGTH;\n    } else {\n      return '';\n    }\n  }\n\n  const checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n    return isValid;\n  }\n\n  const inputChangedHandler = event => {\n    const updatedState = {\n      value: event.target.value,\n      validation: {...inputState.validation}\n    }\n    updatedState.validation.touched = true;\n    updatedState.validation.valid = checkValidity(updatedState.value, updatedState.validation);\n    updatedState.validation.errorMessage = generateErrorMessage(updatedState.value, updatedState.validation);\n    setInputState(updatedState);\n  }\n\n  const todoAddedHandler = (event, value) => {\n    props.added(event, value);\n    setInputState(initialState);\n  }\n\n  return (\n    <form onSubmit={(event) => todoAddedHandler(event, inputState.value)}>\n      <Input\n        value={inputState.value}\n        changed={(event) => inputChangedHandler(event)}\n        invalid={!inputState.validation.valid}\n        touched={inputState.validation.touched}\n        errorMessage={inputState.validation.errorMessage}\n      />\n      <Button\n        disabled={!inputState.validation.valid}\n        clicked={(event) => todoAddedHandler(event, inputState.value)}\n        btnType='Add'\n      >\n        <svg>\n          <use xlinkHref=\"./symbol-defs.svg#icon-plus-square\" />\n        </svg>\n        ADD\n      </Button>\n    </form>\n  );\n}\n\nexport default TodoForm;\n","import React from 'react';\nimport classes from './TodoItems.module.scss';\nimport TodoItem from './TodoItem/TodoItem';\nimport TodoForm from '../../containers/TodoFrom';\n\nconst todoItems = props => {\n  let todos = <div className={classes.Empty}>\n    Todo list is empty...\n    Add something.\n  </div>\n\n  if (props.todos.length) {\n    todos = props.todos.map(todo => (\n      <TodoItem\n        id={todo.id}\n        key={todo.id}\n        todo={todo}\n        changed={(event)=>props.changed(event, todo.id)}\n        deleted={(event)=>props.deleted(event, todo.id)}\n      />));\n  }\n\n  return (\n    <div className={classes.TodoList}>\n      <h1>TODOs:</h1>\n      <div className={classes.Container}>\n        <TodoForm added={props.added}/>\n        {todos}\n      </div>\n    </div>\n  )\n}\n\nexport default todoItems;\n","import React, { useState } from 'react';\nimport TodoItems from '../components/TodoItems/TodoItems';\n\nconst TodoController = () => {\n  const initialState = {\n    todos: []\n  };\n  const currentState = JSON.parse(localStorage.getItem('state'));\n  const [state, setState] = useState(currentState || initialState);\n\n  const updateLocalStorage = (state) => {\n    localStorage.setItem('state', JSON.stringify(state));\n  };\n\n  const addTodoHandler = (event, value) => {\n    event.preventDefault();\n    const updatedState = {todos: [...state.todos]};\n    updatedState.todos.push({\n      id: Date.now(),\n      title: value,\n      checked: false\n    })\n    setState(updatedState);\n    updateLocalStorage(updatedState);\n  };\n\n  const changeTodoHandler = (event, id) => {\n    if (event.type === 'change' || event.type === 'click' || event.key === \"Enter\") {\n      const updatedState = {todos: [...state.todos]};\n      const changedTodo = updatedState.todos.find(todo => todo.id === id);\n      changedTodo.checked = !changedTodo.checked;\n      setState(updatedState);\n      updateLocalStorage(updatedState);\n    }\n  };\n\n  const deleteTodoHandler = (event, id) => {\n    event.stopPropagation();\n    const updatedState = {todos: [...state.todos]};\n    updatedState.todos = updatedState.todos.filter(todo => todo.id !== id);\n    setState(updatedState);\n    updateLocalStorage(updatedState);\n  };\n\n  return <TodoItems\n    todos={state.todos}\n    deleted={deleteTodoHandler}\n    changed={changeTodoHandler}\n    added={addTodoHandler}\n  />;\n};\n\nexport default TodoController;\n","import Layout from './hoc/Layout/Layout';\nimport TodoController from './containers/TodoController';\n\nfunction App() {\n  return <>\n    <Layout>\n      <TodoController />\n    </Layout>\n  </>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}